apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{APP_NAME}}
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{APP_NAME}}
  template:
    metadata:
      labels:
        app: {{APP_NAME}}
    spec:
      containers:
      - name: {{APP_NAME}}
        image: {{IMAGE_NAME}}
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "docker_os_manager"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{APP_NAME}}-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{APP_NAME}}-secrets
              key: db-password
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{NAMESPACE}}
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "docker_os_manager"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{APP_NAME}}-secrets
              key: db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{APP_NAME}}-secrets
              key: db-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: {{NAMESPACE}}
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubuntu-desktop
  namespace: {{NAMESPACE}}
  labels:
    app: ubuntu-desktop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubuntu-desktop
  template:
    metadata:
      labels:
        app: ubuntu-desktop
    spec:
      containers:
      - name: ubuntu-desktop
        image: dorowu/ubuntu-desktop-lxde-vnc:latest
        ports:
        - containerPort: 80
        env:
        - name: VNC_PASSWORD
          value: "osmanager"
        - name: RESOLUTION
          value: "1920x1080"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: ubuntu-config
          mountPath: /home/ubuntu
      volumes:
      - name: ubuntu-config
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine-desktop
  namespace: {{NAMESPACE}}
  labels:
    app: alpine-desktop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpine-desktop
  template:
    metadata:
      labels:
        app: alpine-desktop
    spec:
      containers:
      - name: alpine-desktop
        image: danielguerra/alpine-vnc:latest
        ports:
        - containerPort: 6080
        env:
        - name: VNC_PASSWORD
          value: "osmanager"
        - name: RESOLUTION
          value: "1920x1080"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: alpine-config
          mountPath: /home/alpine
      volumes:
      - name: alpine-config
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debian-desktop
  namespace: {{NAMESPACE}}
  labels:
    app: debian-desktop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: debian-desktop
  template:
    metadata:
      labels:
        app: debian-desktop
    spec:
      containers:
      - name: debian-desktop
        image: accetto/debian-vnc-xfce-g3:latest
        ports:
        - containerPort: 5901
        env:
        - name: VNC_PW
          value: "osmanager"
        - name: VNC_RESOLUTION
          value: "1920x1080"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: debian-config
          mountPath: /home/headless
      volumes:
      - name: debian-config
        emptyDir: {}